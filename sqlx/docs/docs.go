// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/projects": {
            "get": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "get project list",
                "operationId": "ProjectsReadAll",
                "responses": {
                    "200": {
                        "description": "project list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectLi"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "create project",
                "operationId": "ProjectCreate",
                "parameters": [
                    {
                        "description": "project data",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/projects/{p_id}": {
            "get": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "get project",
                "operationId": "ProjectRead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "project id",
                        "name": "p_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "project data",
                        "schema": {
                            "$ref": "#/definitions/dto.Project"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "update project",
                "operationId": "ProjectUpdate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "project id",
                        "name": "p_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "project data",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "delete project",
                "operationId": "ProjectDelete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "project id",
                        "name": "p_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/projects/{p_id}/tasks": {
            "get": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "get project tasks",
                "operationId": "TasksReadByProject",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "project id",
                        "name": "p_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "project tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TaskLi"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "create task",
                "operationId": "TaskCreate",
                "parameters": [
                    {
                        "description": "task data",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NewTask"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "project id",
                        "name": "p_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tasks/{t_id}": {
            "get": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "get task",
                "operationId": "TaskRead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "task id",
                        "name": "t_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "task data",
                        "schema": {
                            "$ref": "#/definitions/dto.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "update task",
                "operationId": "TaskUpdate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "task id",
                        "name": "t_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "task data",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "delete task",
                "operationId": "TaskDelete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "task id",
                        "name": "t_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Project": {
            "type": "object",
            "properties": {
                "p_id": {
                    "type": "integer"
                },
                "p_name": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectLi": {
            "type": "object",
            "properties": {
                "p_id": {
                    "type": "integer"
                },
                "p_name": {
                    "type": "string"
                },
                "p_tasks_count": {
                    "type": "integer"
                }
            }
        },
        "dto.Task": {
            "type": "object",
            "properties": {
                "p_id": {
                    "type": "integer"
                },
                "t_comments": {
                    "type": "string"
                },
                "t_date": {
                    "type": "string"
                },
                "t_id": {
                    "type": "integer"
                },
                "t_priority": {
                    "type": "integer"
                },
                "t_subject": {
                    "type": "string"
                }
            }
        },
        "dto.TaskLi": {
            "type": "object",
            "properties": {
                "t_date": {
                    "type": "string"
                },
                "t_id": {
                    "type": "integer"
                },
                "t_priority": {
                    "type": "integer"
                },
                "t_subject": {
                    "type": "string"
                }
            }
        },
        "request.NewTask": {
            "type": "object",
            "required": [
                "t_subject"
            ],
            "properties": {
                "t_subject": {
                    "type": "string",
                    "maxLength": 256
                }
            }
        },
        "request.Project": {
            "type": "object",
            "required": [
                "p_name"
            ],
            "properties": {
                "p_name": {
                    "type": "string",
                    "maxLength": 256
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "127.0.0.1:8080",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Todolist API",
	Description:      "Todolist API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
